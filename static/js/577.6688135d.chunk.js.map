{"version":3,"file":"static/js/577.6688135d.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","page/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components'\n\nexport const Form = styled.form`\n    display: flex;\n    flex-direction: column;\n    \n`\nexport const Label = styled.label`\n    font-size: 18px;\n`\n\nexport const Input = styled.input`\n    padding: 5px;\n    margin-left: 31px;\n    margin-bottom: 15px;\n    border-radius: 10px;\n    width: 45%;\n    :hover{\n        \n        border: 2px solid black;\n        box-shadow: 1px 1px 4px 1px #470c3aaf;\n\n    }\n`\n\nexport const NameInput = styled.input`\n    padding: 5px;\n    margin-left: 12px;\n    margin-bottom: 15px;\n    border-radius: 10px;\n    width: 45%;\n    :hover{\n        \n        border: 2px solid black;\n        box-shadow: 1px 1px 4px 1px #470c3aaf;\n    }\n`\n\nexport const Button = styled.button`\n    display: flex;\n    border-radius: 10px;   \n    font-size: 18px;\n    background-color:#665050;\n    box-shadow: 0px 0px 2px 2px #333333ae;\n    cursor: pointer;\n    margin-left: auto;\n    margin-right: auto;\n    padding: 5px; \n    \n    \n    :hover{\n        color: #470c3aaf;\n        box-shadow: 0px 0px 2px 2px #470c3aaf;\n        cursor: pointer;\n        transform: scale(1.1);\n        background-color:#8d7777;\n        border:2px solid black;\n    }\n    \n`\n","\nimport { useState } from 'react';\nimport { Button, Form, Input, Label, NameInput} from \"./ContactForm.styled\";\nimport { TiUserAdd } from 'react-icons/ti';\nimport { useCreateContactsMutation, useFetchContactsQuery } from 'redux/contacts/contactsSlice';\n\n\nexport function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const [createContacts, {isLoading}] = useCreateContactsMutation();\n  const { data: contacts} = useFetchContactsQuery();\n\n   const handleChange = e => {\n     const {name, value} = e.currentTarget;\n     switch (name) {\n       case \"name\":\n         setName(value)\n         break;\n       case \"number\":\n         setNumber(value)\n         break;\n     \n       default:\n         break;\n     }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n       const newName = contacts.some(contact => contact.name === name);\n    if (newName) {\n      reset();\n      return alert(`${name} is already in contacts`);\n    }\n    createContacts({name, number})\n      reset();\n    };\n\n  const reset = () => {\n      setName('')\n      setNumber('')\n    }\n  \n    return ( \n        <Form onSubmit={handleSubmit}>\n          <Label>\n            Name: \n            <Input\n              type=\"text\"\n              value={name}\n              onChange={handleChange}\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            placeholder='Angela Wolf'\n            />\n          </Label>\n          <Label>\n            Number: \n            <NameInput\n              type=\"tel\"\n              value={number}\n              onChange={handleChange}\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            placeholder='236-634-3355'\n            />\n        </Label>\n        <Button type=\"submit\" disabled={isLoading}>\n          Add contact \n            <TiUserAdd style={{ width: 20, height: 20,  marginLeft: '8px' }} /> \n         \n          \n          </Button>\n        </Form>\n      \n    );\n  \n} \n\n\n","import styled from 'styled-components'\n\nexport const Input = styled.input`\ndisplay:inline-block;\nmargin: auto;\n    padding: 5px;\n    border-radius: 10px;\n    width: 40%;\n    :hover{\n        \n        border: 2px solid black;\n        box-shadow: 1px 1px 4px 1px #470c3aaf;\n\n    }\n`\nexport const Text = styled.p`\ndisplay: flex;\n    text-align: center;\n    justify-content:center;\n    font-size: 20px;\n    margin: 0;\n    margin-bottom: 15px;\n    padding:0;\n`\nexport const FilterBox = styled.div`\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 15px;\n    \n`\n\nexport const Label = styled.label`\n    display: flex;\n    flex-direction: column;\n    justify-content:center;\n    \n`","import { MdPersonSearch } from 'react-icons/md';\nimport React from \"react\";\nimport { FilterBox, Input, Label, Text } from './Filter.styled';\n\nexport const Filter = ({ onChange, value }) => {\n\n  return (<FilterBox>\n       <Label>\n       <Text >Find contacts by name\n         <MdPersonSearch style={{ width: 25, height: 25, marginLeft: '8px'  }}/>\n       </Text>\n       \n          <Input\n            type=\"text\"\n            onChange={(e) =>onChange(e.target.value.toLowerCase()) }\n            value={value}\n      />\n      </Label>\n     </FilterBox>   )\n}\n","import styled from 'styled-components'\n\nexport const Text = styled.p`\n    text-align: center;\n    font-size: 20px;\n    font-weight: 700;\n`\n\nexport const Button = styled.button`\nfont-size: 16px;\n    padding: 2px; \n    border: none;\n    background-color: inherit;\n   \n    :hover{\n        color: #470c3aaf;\n        cursor: pointer;\n        transform: scale(1.2);\n        /* border: 2px solid black;\n        box-shadow: 1px 1px 4px 1px #470c3aaf; */\n    }\n`\n\nexport const Item = styled.li`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n`\nexport const ContactName = styled.p`\n    \n    font-size: 18px;\n    font-weight: 700;\n`\n\nexport const Contact= styled.div`\n     display: flex;\n    justify-content: space-between;\n    align-items: center;\n    min-width: 320px;\n`\n\nexport const List = styled.ul`\n    \n    padding: 0;\n`\n\nexport const Dots = styled.span`\n   display: block;\n  flex-grow: 1;\n  border-bottom: thin dashed #1b1b1b;\n  float: left;\n  display: block;\n  height: 15px;\n  margin: 0 7px 0 5px;\n`","\nimport { Button, Contact, ContactName, Dots, Item, List, Text } from './ContactList.styled';\nimport {RiDeleteBin6Line} from 'react-icons/ri'\nimport { useDeleteContactsMutation, useFetchContactsQuery } from \"redux/contacts/contactsSlice\";\n\nexport function ContactList({normalizedFilter}) {\n    const { data, error, isFetching } = useFetchContactsQuery();\n    const [deleteContacts] = useDeleteContactsMutation();\n\n    const visibleContacts = data.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter))\n\n    return (<>\n        {isFetching && <p>Loading...</p>}\n        {error && <p>{error.data }</p>}\n        {data  && \n    <div>\n           {visibleContacts.length === 0 ?\n                (\n                    <Text>Nothing found</Text>\n            \n                ) : (\n                   <List>\n                            {visibleContacts.map(({ id, name, number }) => \n                                <Item key={id}>\n                                    <Contact>\n                                        <ContactName>{name}: </ContactName>\n                                        <Dots></Dots>\n                                    <a href={`tel:${number}`}>{number}</a >\n                                    </Contact>\n                                    <Button type=\"button\" onClick={()=>deleteContacts(id)}>\n                                        <RiDeleteBin6Line style={{ width: 20, height: 20,   }} />\n                                    </Button>\n                                </Item>\n                            )}\n                        </List >)\n                   \n            }\n        </div>}\n        </>\n    )   \n}\n","import { Phonebook, SecondTitle, Title, Text, } from './ContactsPage.styled';\nimport { useFetchContactsQuery } from 'redux/contacts/contactsSlice';\nimport { useState } from 'react';\n// import { BsSunFill, BsMoonStarsFill } from 'react-icons/bs';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { changeTheme } from 'redux/store';\n\nexport default function ContactsPage() {\n  const { data: contacts } = useFetchContactsQuery();\n  const [filter, setFilter] = useState('');\n\n  return (\n    \n      <Phonebook>\n        <Title>Phonebook</Title>\n        <ContactForm />\n\n        {contacts && contacts.length > 0 ? (\n          <>\n            <SecondTitle>Contacts</SecondTitle>\n            <Filter onChange={setFilter} value={filter} />\n            <ContactList normalizedFilter={filter} />\n          </>\n        ) : (\n          <Text>No contacts add</Text>\n        )}\n      </Phonebook>\n    \n  );\n}\n\n\n"],"names":["Form","styled","Label","Input","NameInput","Button","ContactForm","useState","name","setName","number","setNumber","useCreateContactsMutation","createContacts","isLoading","contacts","useFetchContactsQuery","data","handleChange","e","currentTarget","value","reset","onSubmit","preventDefault","some","contact","alert","type","onChange","pattern","title","required","placeholder","disabled","style","width","height","marginLeft","Text","FilterBox","Filter","target","toLowerCase","Item","ContactName","Contact","List","Dots","ContactList","normalizedFilter","error","isFetching","useDeleteContactsMutation","deleteContacts","visibleContacts","filter","includes","length","map","id","href","onClick","ContactsPage","setFilter"],"sourceRoot":""}