{"version":3,"file":"static/js/707.8ee75e4f.chunk.js","mappings":"uVAIaA,GAAeC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,CAAH,kPAWZE,EAAQF,EAAAA,GAAAA,GAAH,0HAKN,SAAAG,GAAK,OAAIA,EAAMC,WAAa,UAAY,aAGvCC,GAAQL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,+HASLO,GAAYP,EAAAA,EAAAA,IAAOE,EAAPF,CAAH,uFAOTQ,EAAOR,EAAAA,GAAAA,KAAH,wPAUJS,EAAYT,EAAAA,GAAAA,GAAH,oJ,2IC3Cf,SAASU,IACZ,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACA,GAAkCN,EAAAA,EAAAA,UAAS,MAA3C,eAAOO,EAAP,KAAkBC,EAAlB,KACA,GAA0CR,EAAAA,EAAAA,UAAS,MAAnD,eAAOS,EAAP,KAAsBC,EAAtB,KAeA,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,SAASC,EAAaC,GAClB,MAAwBA,EAAEC,cAAlBd,EAAR,EAAQA,KAAMe,EAAd,EAAcA,MACd,OAAQf,GACJ,IAAK,OACDC,EAAQc,GACRR,EAAa,IACb,MACJ,IAAK,WACDF,EAAYU,GACZN,EAAiB,IACjB,MACJ,IAAK,QACDN,EAASY,IAiBpB,IAAMC,EAAQ,WACbf,EAAQ,IACLE,EAAS,IACTE,EAAY,KAGXY,EAAuB,KAATjB,GAA8B,KAAbI,GAA+B,KAAVF,EACpDgB,GAASC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAGA,EAAMC,MAAMN,SAE/C,OAAQ,iCACJ,SAAC,KAAD,CAAOvB,WAAY0B,EAAnB,qFAIA,UAAC,KAAD,CAAMI,SAvBd,SAAsBT,GAClBA,EAAEU,iBACF,IAAMC,EAAU,CAAExB,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,GACzBqB,EApCN,YAA2C,IAAnBzB,EAAkB,EAAlBA,KAAMI,EAAY,EAAZA,SAC1B,OAAIJ,EAAK0B,OAAS,GAChBnB,EAAa,mBACJ,KAEPH,EAASsB,OAAS,KAClBjB,EAAiB,uBACV,GA6BIkB,CAAaH,GAC3BC,IACLf,GAASkB,EAAAA,EAAAA,IAASJ,IAClBR,MAiBI,WACI,SAAC,KAAD,4BACA,SAACa,EAAA,EAAD,CAAWC,GAAG,iBAAiBC,MAAM,OAAOC,KAAK,OACjDC,MAAM,YACNC,MAAO,CAAEC,aAAc,QACrBpB,MAAOf,EACPoC,SAAUxB,EACVZ,KAAK,OACLqC,WAAY/B,EACZgC,UAAQ,KACV,SAACT,EAAA,EAAD,CAAWC,GAAG,iBAAiBC,MAAM,QAAQC,KAAK,QAClDC,MAAM,YACNC,MAAO,CAAEC,aAAc,QACrBpB,MAAOb,EACPkC,SAAUxB,EACVZ,KAAK,WACP,SAAC6B,EAAA,EAAD,CAAWC,GAAG,iBAAiBC,MAAM,WAAYC,KAAK,WACtDC,MAAM,YACNC,MAAO,CAAEC,aAAc,QACrBpB,MAAOX,EACPgC,SAAUxB,EACVZ,KAAK,WACLqC,WAAY7B,EACZ8B,UAAQ,KACV,SAAC,KAAD,CAAcJ,MAAO,CAAEK,gBAAiB,aAAgBC,QAAQ,YAAYR,KAAK,SAASS,SAAUxB,EAApG,gCAEJ,UAAC,KAAD,CAAWzB,WAAY0B,EAAvB,uCAC6B,SAAC,KAAD,CAAOwB,GAAG,SAAV,0BC/FtB,SAASC,IACpB,OAAQ,+BAEA,SAAC7C,EAAD","sources":["components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","page/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport Button from '@mui/material/Button';\nimport { Link } from 'react-router-dom';\n\nexport const ButtonSubmit = styled(Button)`\n  color: red;\n  background-color: #856c6c;\n  padding: 15px 40px;\n  box-shadow: inset 0px -8px 10px 0px #bd9797;\n  display: inline-block;\n  &:hover{\n    background-color: #e28787;\n    transform: scale(1.1)\n  }\n`\nexport const Title = styled.h1`\n   text-align: center;\n   font-size: 18px;\n   margin: 0;\n   font-weight: 400;\n   color: ${props => props.themeColor ? \"#2e2a2a\" : \"#e2d7d7\"};\n`\n\nexport const Links = styled(Link)`\n  \n   text-decoration: underline;\n   &:hover{\n     color: #bb7a7a;\n     transform: scale(2)\n   }\n`\n\nexport const TitleLink = styled(Title)`\n   \n   font-size: 15px;\n  width:300px;\n  font-weight: 400;\n`\n\nexport const Form = styled.form`\nmargin: 20px auto ;\n    background-color: #856c6c;\n    padding: 20px;\n    border: 2px solid #e0d4d4;\n    box-shadow: 8px 8px 20px 1px #857579ae;\n    display: flex;\n    flex-direction: column;\n    border-radius:10px;\n`\nexport const TitleForm = styled.h1`\n   text-align: center;\n   font-size: 24px;\n   margin: 0;\n   text-shadow: #f3c4c4 2px 0 2px;\n   margin-bottom: 20px;  \n`","import TextField from '@mui/material/TextField';\nimport {  Form, Links, Title, TitleForm, TitleLink , ButtonSubmit} from './RegisterForm.styled';\nimport { useState } from 'react';\nimport {  useDispatch, useSelector } from 'react-redux';\nimport { register } from 'redux/auth/authOperation';\n\nexport function RegisterForm() {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [nameError, setNameError] = useState(null);\n    const [passwordError, setPasswordError] = useState(null);\n\n    \n    function validateForm({ name, password }) {\n        if (name.length < 2) {\n          setNameError('Name too short');\n            return false;  \n        }\n        if (password.length < 7) {\n            setPasswordError('Password too short');\n            return false;\n        }\n        return true;\n    }\n\n    const dispatch = useDispatch()\n    function handleChange(e) {\n        const { name, value } = e.currentTarget;\n        switch (name) {\n            case 'name':\n                setName(value);\n                setNameError('');    \n                break;\n            case 'password':\n                setPassword(value);\n                setPasswordError('');    \n                break;\n            case 'email':\n                setEmail(value); \n                break;\n        \n            default:\n                break;\n        }\n    }\n\nfunction handleSubmit(e) {\n    e.preventDefault();\n    const newUser = { name, email, password };\n    const validation = validateForm(newUser);\n    if (!validation) return\n    dispatch(register(newUser));\n    reset();\n    }\n    \n     const reset = () => {\n      setName('')\n         setEmail('')\n         setPassword('')\n    }\n\n    const onDisabled = (name === '') || (password === '') || (email === '');\n    const themes = useSelector(state=> state.theme.value)\n\n    return (<>\n        <Title themeColor={themes}>\n            Create your Phonebook account. Itâ€™s free and only takes a minute.\n        </Title>\n        \n        <Form onSubmit={handleSubmit}>\n            <TitleForm>Registration</TitleForm>\n            <TextField id=\"outlined-basic\" label=\"Name\" type=\"text\"\n            color=\"secondary\"\n            style={{ marginBottom: '15px'  }}\n              value={name}\n              onChange={handleChange}\n              name=\"name\"\n              helperText={nameError}\n              required/>\n            <TextField id=\"outlined-basic\" label=\"Email\" type=\"email\"\n            color=\"secondary\"\n            style={{ marginBottom: '15px'  }}\n              value={email}\n              onChange={handleChange}\n              name=\"email\"/>\n            <TextField id=\"outlined-basic\" label=\"Password\"  type=\"password\"\n            color=\"secondary\"\n            style={{ marginBottom: '15px'  }}\n              value={password}\n              onChange={handleChange}\n              name=\"password\"\n              helperText={passwordError}\n              required/>\n            <ButtonSubmit style={{ backgroundColor: '#d8bdc4ac', }} variant=\"contained\" type=\"submit\" disabled={onDisabled}>Create account</ButtonSubmit>\n        </Form>\n        <TitleLink themeColor={themes}>\n            Already have an account? <Links to=\"/login\">Log in</Links>\n            </TitleLink>\n    </>)\n}","import { RegisterForm } from \"components/RegisterForm/RegisterForm\";\n\nexport default function RegisterPage() {\n    return (<>\n        \n            <RegisterForm />\n        \n    </>)\n}"],"names":["ButtonSubmit","styled","Button","Title","props","themeColor","Links","Link","TitleLink","Form","TitleForm","RegisterForm","useState","name","setName","email","setEmail","password","setPassword","nameError","setNameError","passwordError","setPasswordError","dispatch","useDispatch","handleChange","e","currentTarget","value","reset","onDisabled","themes","useSelector","state","theme","onSubmit","preventDefault","newUser","validation","length","validateForm","register","TextField","id","label","type","color","style","marginBottom","onChange","helperText","required","backgroundColor","variant","disabled","to","RegisterPage"],"sourceRoot":""}